<template>

		<view class="tabs">
			<uni-fab :buttonIcon="'plus'" v-show="2==tabIndex&&login" :pattern="fab.pattern" :horizontal="fab.horizontal" :vertical="fab.vertical"
			 :direction="fab.direction" :content="fab.menu" @trigger="onMenuItemClick" @fabClick="onMenuClick"></uni-fab>
			<scroll-view ref="tabbar1" id="tab-bar" class="tab-bar" :scroll="false" :scroll-x="true" :show-scrollbar="false"
			 :scroll-into-view="scrollInto">
				<view style="flex-direction: column;">
					<view style="flex-direction: row;">
						<view class="uni-tab-item" v-for="(tab,index) in tabList" :key="tab.id" :id="tab.id" :ref="'tabitem'+index"
						 :data-id="index" :data-current="index" @click="ontabtap">
							<text class="uni-tab-item-title" :class="tabIndex==index ? 'uni-tab-item-title-active' : ''">{{tab.name}}</text>
						</view>
					</view>
					<view class="scroll-view-indicator">
						<view ref="underline" class="scroll-view-underline" :class="isTap ? 'scroll-view-animation':''" :style="{left: indicatorLineLeft + 'px', width: indicatorLineWidth + 'px'}"></view>
					</view>
				</view>
			</scroll-view>
			<view class="tab-bar-line"></view>
			<swiper class="tab-box" ref="swiper1" :current="tabIndex" :duration="300" @change="onswiperchange" @transition="onswiperscroll"
			 @animationfinish="animationfinish" @onAnimationEnd="animationfinish">
				<swiper-item class="swiper-item" v-for="(page, index) in tabList" :key="index">
					<!-- #ifndef MP-ALIPAY -->
					<newsPage class="page-item" :nid="page.newsid" ref="page"></newsPage>
					<!-- #endif -->
					<!-- #ifdef MP-ALIPAY -->
					<newsPage class="page-item" :nid="page.newsid" :ref="'page' + index"></newsPage>
					<!-- #endif -->
				</swiper-item>
			</swiper>
</view>

</template>



<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif
	import newsPage from '@/pages/news/news-page.nvue';
	import uniFab from '@/components/uni-fab/uni-fab.vue';
	import {
		logoImage
	} from '@/common/logo.js'
	import {
		cache
	} from '@/common/cache.js'
	import {
		base64ToStr,
		closeTo,
		isLogin,
		loginTo,
		naviTo,
		checkLogin,
		successToast,
		formatDate,
		formatDateTime

	} from '@/common/route.js';
	import {
		reportQr
	} from '@/api/main.js'
	import {
		justConfirm,
		postPageChanged
	} from '@/common/util.js'


	// 缓存每页最多
	const MAX_CACHE_DATA = 100;
	// 缓存页签数量
	const MAX_CACHE_PAGE = 3;
	const TAB_PRELOAD_OFFSET = 1;

	function getCurTab() {
		return null == cache("curTabIndex") ? 0 : cache("curTabIndex")
	}

	function setCurTab(index) {
		//console.log("setCurTab==>",index)
		cache("curTabIndex", index)
	}

	export default {
		components: {
			newsPage,
			uniFab

		},
		data() {
			return {
				fab: {
					pattern: {
						buttonColor: '#3584f7'
					},
					horizontal: 'right',
					vertical: "bottom",
					direction: "vertical",
					popMenu: true,
					menu: [{
						iconPath: "https://miao-share.oss-cn-shenzhen.aliyuncs.com/reservation/system/account.png",
						selectedIconPath: "https://miao-share.oss-cn-shenzhen.aliyuncs.com/reservation/system/account-active.png",
						text: "登录",
						active: true,
						key: "login"
					}, {
						iconPath: "https://miao-share.oss-cn-shenzhen.aliyuncs.com/reservation/system/home.png",
						selectedIconPath: "https://miao-share.oss-cn-shenzhen.aliyuncs.com/reservation/system/home-active.png",
						text: "签到",
						active: true,
						key: "home"
					}, ]
				},
				naviConfig: {
					back: false,
					backPage: "/pages/news/index",
					title: '活动预约',
					color: '#ffffff',
					//背景颜色;参数一：透明度（0-1）;参数二：背景颜色（array则为线性渐变，string为单色背景）
					backgroundColor: [1, ['#a9a1ff', '#6970ff']],
					// 滑动屏幕后切换颜色，注意颜色为数组时长度必须一样，还有使用滑动切换必须监听 onPageScroll 事件
					//    slideBackgroundColor: [0,['#a9a1ff','#6970ff','#ff55ff','#ff9999']],
					// 状态栏 ，数组则为滑动变色
					statusBarBackground: ['', '#ffffff'],
					rightButton: [{
						key: 'btn3',
						icon: '&#xe65c;',
						position: 'left'
					}]
				},
				showNavi:false,
				tabList: [{
					id: "tab01",
					name: '进行中',
					newsid: 0
				}, {
					id: "tab02",
					name: '过期的',
					newsid: 1
				}, {
					id: "tab03",
					name: '自己的',
					newsid: 2
				}],
				tabIndex: 0,
				cacheTab: [],
				scrollInto: "",
				navigateFlag: false,
				indicatorLineLeft: 0,
				indicatorLineWidth: 0,
				isTap: false,
				login: isLogin()
			}
		},
		onLoad: function(option) {
			//uni.setStorageSync('setUserInfo', null); //存入缓存
		},
		onReachBottom() { //与methods 同级
			console.log('页面到底了')
		},
		onShow(){
			postPageChanged()
		},	
		onShareAppMessage(res) {
			return {
				title: "我们约一下",
				path: "/pages/news/index",
				imageUrl: logoImage(),
				// desc:this.banner.datetime,
				//content:this.banner.source,
				success(res) {
					uni.showToast({
						title: '分享成功'
					})
				},
				fail(res) {
					uni.showToast({
						title: '分享失败',
						icon: 'none'
					})
				}
			}
		},
		onReady() {
			console.log("root ready", this.tableIndex, getCurTab())
			this._lastTabIndex = 0;
			this.swiperWidth = 0;
			this.tabbarWidth = 0;
			this.tabListSize = {};
			this._touchTabIndex = 0;

			// #ifndef MP-ALIPAY
			this.pageList = this.$refs.page;
			// #endif
			// #ifdef MP-ALIPAY
			this.pageList = [];
			for (var i = 0; i < this.tabList.length; i++) {
				this.pageList.push(this.$refs['page' + i][0]);
			}
			// #endif
			this.tabIndex = getCurTab()
			this.switchTab(this.tabIndex);

			this.selectorQuery();
			
		},
		onPageScroll(e) {
		        // 重点，用到滑动切换必须加上
		        this.$refs.hxnb.pageScroll(e);
		},
		methods: {

			ontabtap(e) {
				let index = e.target.dataset.current || e.currentTarget.dataset.current;
				//let offsetIndex = this._touchTabIndex = Math.abs(index - this._lastTabIndex) > 1;

				// #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				this.isTap = true;
				var currentSize = this.tabListSize[index];
				this.updateIndicator(currentSize.left, currentSize.width);
				this._touchTabIndex = index;
				// #endif

				this.switchTab(index);
			},
			onswiperchange(e) {
				//换页就清除状态
				this.$refs.page[this.tabIndex].quitOperation()
			},
			onswiperscroll(e) {
				if (this.isTap) {
					return;
				}

				var offsetX = e.detail.dx;
				var preloadIndex = this._lastTabIndex;
				if (offsetX > TAB_PRELOAD_OFFSET) {
					preloadIndex++;
				} else if (offsetX < -TAB_PRELOAD_OFFSET) {
					preloadIndex--;
				}
				if (preloadIndex === this._lastTabIndex || preloadIndex < 0 || preloadIndex > this.pageList.length - 1) {
					return;
				}
				if (this.pageList[preloadIndex].dataList.length === 0) {
					this.loadTabData(preloadIndex);
				}

				// #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				var percentage = Math.abs(this.swiperWidth / offsetX);
				var currentSize = this.tabListSize[this._lastTabIndex];
				var preloadSize = this.tabListSize[preloadIndex];
				var lineL = currentSize.left + (preloadSize.left - currentSize.left) / percentage;
				var lineW = currentSize.width + (preloadSize.width - currentSize.width) / percentage;
				this.updateIndicator(lineL, lineW);
				// #endif
			},
			animationfinish(e) {
				// #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				let index = e.detail.current;
				if (this._touchTabIndex === index) {
					this.isTap = false;
				}
				this._lastTabIndex = index;
				this.switchTab(index);
				this.updateIndicator(this.tabListSize[index].left, this.tabListSize[index].width);
				// #endif
			},
			selectorQuery() {
				// #ifdef APP-NVUE
				dom.getComponentRect(this.$refs.tabbar1, res => {
					this.tabbarWidth = res.size.width;
				});
				dom.getComponentRect(this.$refs['swiper1'], res => {
					this.swiperWidth = res.size.width;
				});
				// for (var i = 0; i < this.tabList.length; i++) {
				// 	this.getElementSize(dom, this.$refs['tabitem' + i][0], i);
				// }
				// 因 nvue 暂不支持 class 查询
				var queryTabSize = uni.createSelectorQuery().in(this);
				for (var i = 0; i < this.tabList.length; i++) {
					queryTabSize.select('#' + this.tabList[i].id).boundingClientRect();
				}
				queryTabSize.exec(rects => {
					rects.forEach((rect) => {
						this.tabListSize[rect.dataset.id] = rect;
					})
					this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex].width);
					this.switchTab(this.tabIndex);
				});
				// #endif

				// #ifdef MP-WEIXIN || H5 || MP-QQ
				uni.createSelectorQuery().in(this).select('.tab-box').fields({
					dataset: true,
					size: true,
				}, (res) => {
					this.swiperWidth = res.width;
				}).exec();
				uni.createSelectorQuery().in(this).selectAll('.uni-tab-item').boundingClientRect((rects) => {
					rects.forEach((rect) => {
						this.tabListSize[rect.dataset.id] = rect;
					})
					this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex].width);
				}).exec();
				// #endif
			},
			getElementSize(dom, ref, id) {
				dom.getComponentRect(ref, res => {
					this.tabListSize[id] = res.size;
				});
			},
			updateIndicator(left, width) {
				this.indicatorLineLeft = left;
				this.indicatorLineWidth = width;
			},
			isEnable(tabIndex) {
				return (2 == tabIndex && isLogin()) || 2 != tabIndex
			},
			switchTab(index) {
				//console.log("switchTab==>",index)
				if (this.pageList[index].dataList.length === 0 && this.isEnable(index)) {
					this.loadTabData(index);
				}

				if (this.tabIndex === index) {
					return;
				}

				// 缓存 tabId
				if (this.pageList[this.tabIndex].dataList.length > MAX_CACHE_DATA) {
					let isExist = this.cacheTab.indexOf(this.tabIndex);
					if (isExist < 0) {
						this.cacheTab.push(this.tabIndex);
					}
				}

				this.tabIndex = index;
				setCurTab(this.tabIndex)

				// #ifdef APP-NVUE
				this.scrollTabTo(index);
				// #endif
				// #ifndef APP-NVUE
				this.scrollInto = this.tabList[index].id;
				// #endif

				// 释放 tabId
				if (this.cacheTab.length > MAX_CACHE_PAGE) {
					let cacheIndex = this.cacheTab[0];
					this.clearTabData(cacheIndex);
					this.cacheTab.splice(0, 1);
				}
			},
			scrollTabTo(index) {
				const el = this.$refs['tabitem' + index][0];
				let offset = 0;
				// TODO fix ios offset
				if (index > 0) {
					offset = this.tabbarWidth / 2 - this.tabListSize[index].width / 2;
					if (this.tabListSize[index].right < this.tabbarWidth / 2) {
						offset = this.tabListSize[0].width;
					}
				}
				dom.scrollToElement(el, {
					offset: -offset
				});
			},
			loadTabData(index) {
				this.pageList[index].loadData();
			},
			clearTabData(index) {
				this.pageList[index].clear();
			},
			onPullDownRefresh() {
				this.pageList[this.tabIndex].reloadData();
				// console.log('refresh');
				// setTimeout(function () {
				//     uni.stopPullDownRefresh();
				// }, 1000);
			},
			getMediaQueryObserver() {
				this.mediaQueryOb = uni.createMediaQueryObserver(this)
					//	loginTo("/pages/test/index", {name:"area"})
				this.mediaQueryOb.observe({
					minWidth: 768,  //页面最小宽度 375px
					maxWidth: 500  //页面宽度最大 500px
				}, matches => {
					this.matches = matches;
					console.log("getMediaQueryObserver=>",matches)
					if(!matches)
						loginTo("/pages/edit/lists", {name:"area"})
					else
						loginTo("/pages/edit/admin", {name:"area"})					
				})
			},
			onMenuClick() {
				console.log("onMenuClick")
				this.getMediaQueryObserver()
			},
			onMenuItemClick(e) {
				console.log(e)
				if ("login" == e.item.key) {
					naviTo("/pages/login/login")
				} else if ("home" == e.item.key) {
					this.scanCode()
				}
			},
			scanCode() {
				
				uni.scanCode({
					success: function(res) {
						console.log('条码类型：' + res.scanType);
						console.log('条码内容：' + res.result);
						reportQr({
							qr: res.result
						}).then(rsp => {
							if (0 == rsp.code) {
								justConfirm(rsp.message)
							}
						})
					}
				});
			}


		}
	}
</script>

<style>
	/* #ifndef APP-PLUS */
	page {
		width: 100%;
		min-height: 100%;
		display: flex;
	}

	/* #endif */

	.tabs {
		flex: 1;
		flex-direction: column;
		overflow: hidden;
		background-color: #ffffff;
		/* #ifdef MP-ALIPAY || MP-BAIDU */
		height: 100vh;
		/* #endif */
	}

	.tab-bar {
		height: 42px;
		flex-direction: row;
		/* #ifndef APP-PLUS */
		white-space: nowrap;
		/* #endif */
	}

	/* #ifndef APP-NVUE */
	.tab-bar ::-webkit-scrollbar {
		display: none;
		width: 0 !important;
		height: 0 !important;
		-webkit-appearance: none;
		background: transparent;
	}

	/* #endif */

	.scroll-view-indicator {
		position: relative;
		height: 2px;
		background-color: transparent;
	}

	.scroll-view-underline {
		position: absolute;
		top: 0;
		bottom: 0;
		width: 0;
		background-color: #007AFF;
	}

	.scroll-view-animation {
		transition-duration: 0.2s;
		transition-property: left;
	}

	.tab-bar-line {
		height: 1px;
		background-color: #cccccc;
	}

	.tab-box {
		flex: 1;
	}

	.uni-tab-item {
		/* #ifndef APP-PLUS */
		display: inline-block;
		/* #endif */
		flex-wrap: nowrap;
		padding-left: 20px;
		padding-right: 20px;
	}

	.uni-tab-item-title {
		color: #555;
		font-size: 15px;
		height: 40px;
		line-height: 40px;
		flex-wrap: nowrap;
		/* #ifndef APP-PLUS */
		white-space: nowrap;
		/* #endif */
	}

	.uni-tab-item-title-active {
		color: #007AFF;
	}

	.swiper-item {
		flex: 1;
		flex-direction: column;
	}

	.page-item {
		flex: 1;
		flex-direction: row;
		position: absolute;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
	}
</style>
